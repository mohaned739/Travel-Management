/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package travel_management;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Dell
 */
public final class Mainframe extends javax.swing.JFrame {

    /**
     * Creates new form Mainframe
     */
    GridBagLayout layout=new GridBagLayout();
    Add_Client1 addpanel;
    Add_Trip addtrippanel;
    View_trip viewpanel;
    View_client viewclientpanel;
    Edit_Client editclientpanel;
    Add_tour_guide addtourpanel;
    Edit_Tour_Guide edittourpanel;
    PROFIT profitpanel;
    PROFIT profitpanel2;
    PROFIT profitpanel3;
    PROFIT profitpanel4;
    View_TourGuide viewtourpanel;
    History historypanel;
    
    ArrayList<Trip> trips;
    ArrayList<Client> clients;
    ArrayList<Tour_Guide> tour_guide;
    ArrayList<Trip> history;
    public Mainframe(ArrayList<Client> clients,ArrayList<Trip> trips,ArrayList<Tour_Guide> tour_guide,ArrayList<Trip> history) throws ParseException {
        initComponents();
             this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
             this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
          
                 int choose = JOptionPane.showConfirmDialog(null,
                        "Do you really want to exit the application ?",
                        "Confirm Close", JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE);
                if (choose == JOptionPane.YES_OPTION) {
               Files.FileWriteer(trips, tour_guide, clients);
                       
                 e.getWindow().dispose();} 
            } 
 });

        Client c1=new Client();
        Tour_Guide tour=new Tour_Guide();
        this.clients=clients;
        this.trips=trips;
        this.tour_guide=tour_guide;
        this.history=history;
        
        addpanel=new Add_Client1(this.clients);
        addtrippanel=new Add_Trip(this.trips,this.tour_guide);
        viewpanel=new View_trip(this.trips);
        editclientpanel=new Edit_Client(c1);
        viewclientpanel=new View_client(c1, trips);
        addtourpanel=new Add_tour_guide(tour_guide);
        edittourpanel=new Edit_Tour_Guide(tour);
        profitpanel=new PROFIT(-1,-1.5);
        profitpanel2=new PROFIT(-1,-1.5);
        profitpanel3=new PROFIT(-1, -1.5);
        profitpanel4=new PROFIT(-1, -1.5);
        viewtourpanel=new View_TourGuide(tour_guide);
        historypanel=new History(trips, history);
        
        displaypanel.setLayout(layout);
        GridBagConstraints c=new GridBagConstraints();
        c.gridx=0;
        c.gridy=0;
        displaypanel.add(addpanel,c);
        displaypanel.add(addtrippanel,c);
        displaypanel.add(viewpanel,c);
        displaypanel.add(viewclientpanel,c);
        displaypanel.add(editclientpanel,c);
        displaypanel.add(addtourpanel,c);
        displaypanel.add(edittourpanel,c);
        displaypanel.add(profitpanel,c);
        displaypanel.add(profitpanel2,c);
        displaypanel.add(profitpanel3,c);
        displaypanel.add(profitpanel4,c);
        displaypanel.add( viewtourpanel,c);
        displaypanel.add(historypanel,c);
        invisible();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        templet = new javax.swing.JDesktopPane();
        options = new javax.swing.JPanel();
        clientlist = new javax.swing.JComboBox();
        tourguidelist = new javax.swing.JComboBox();
        triplist = new javax.swing.JComboBox();
        profit = new javax.swing.JComboBox();
        displaypanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        options.setBackground(new java.awt.Color(51, 51, 0));
        options.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 3));

        clientlist.setFont(new java.awt.Font("Agency FB", 1, 50)); // NOI18N
        clientlist.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Client", "Add", "Delete", "Edit", "View Info" }));
        clientlist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientlistActionPerformed(evt);
            }
        });

        tourguidelist.setFont(new java.awt.Font("Agency FB", 1, 50)); // NOI18N
        tourguidelist.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tour Guide", "Add", "Delete", "Edit", "CV" }));
        tourguidelist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tourguidelistActionPerformed(evt);
            }
        });

        triplist.setFont(new java.awt.Font("Agency FB", 1, 50)); // NOI18N
        triplist.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trips", "Add", "Delete", "Edit", "View", "Book", "History" }));
        triplist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                triplistActionPerformed(evt);
            }
        });

        profit.setFont(new java.awt.Font("Agency FB", 1, 50)); // NOI18N
        profit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Profits", "Trip profit", "Category profit", "Total profit" }));
        profit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsLayout = new javax.swing.GroupLayout(options);
        options.setLayout(optionsLayout);
        optionsLayout.setHorizontalGroup(
            optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clientlist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(triplist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tourguidelist, 0, 268, Short.MAX_VALUE)
            .addComponent(profit, 0, 0, Short.MAX_VALUE)
        );
        optionsLayout.setVerticalGroup(
            optionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsLayout.createSequentialGroup()
                .addComponent(clientlist, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(tourguidelist, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(triplist, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(profit, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        displaypanel.setBackground(new java.awt.Color(0, 0, 0));
        displaypanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 0, 0), new java.awt.Color(204, 0, 0), new java.awt.Color(204, 0, 0), java.awt.Color.red));

        javax.swing.GroupLayout displaypanelLayout = new javax.swing.GroupLayout(displaypanel);
        displaypanel.setLayout(displaypanelLayout);
        displaypanelLayout.setHorizontalGroup(
            displaypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 653, Short.MAX_VALUE)
        );
        displaypanelLayout.setVerticalGroup(
            displaypanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout templetLayout = new javax.swing.GroupLayout(templet);
        templet.setLayout(templetLayout);
        templetLayout.setHorizontalGroup(
            templetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(templetLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displaypanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        templetLayout.setVerticalGroup(
            templetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(templetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(templetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displaypanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        templet.setLayer(options, javax.swing.JLayeredPane.DEFAULT_LAYER);
        templet.setLayer(displaypanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(templet)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(templet)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clientlistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientlistActionPerformed
        // TODO add your handling code here:
        tourguidelist.setEnabled(false);
        triplist.setEnabled(false);
        profit.setEnabled(false);
        if (clientlist.getSelectedIndex()==0) {
        invisible();
        tourguidelist.setEnabled(true);
        triplist.setEnabled(true);
        profit.setEnabled(true); 
        }
        else if (clientlist.getSelectedIndex()==1) {
            invisible();
            addpanel.setVisible(true);
        }
        else if (clientlist.getSelectedIndex()==2) {
            invisible();
            Client client1=new Client();
            Person client=client1.search(clients);
            if (client!=null) {    
            int choice=JOptionPane.showConfirmDialog(null,"Are You Sure You Want To Delete This Client ?");
                    if (choice==0) {
                        JOptionPane.showMessageDialog(null, "Client is Removed Successfully");
                      boolean found =false;
                      Client c=null;
                        for(Trip trip:trips){
                            int i=0;
                            for(Client client2:trip.Client){
                                if (client2.equals(client)) {
                                trip.setNumber_of_joined(trip.getNumber_of_joined()-trip.tickets.get(i));
                                c=client2;
                                found=true;
                                break;
                                }
                            
                            i++;
                            }
                            if (found) {
                            trip.Client.remove(c);    
                            }
                        }
                            clients.remove((Client)client);
                    }
            }
        }
        
        else if (clientlist.getSelectedIndex()==3) {
            invisible();
             Client client1=new Client();
            Person client=client1.search(clients);
            if (client!=null) {    
                editclientpanel=new Edit_Client((Client)client);
                Add_to_display(editclientpanel);
            }
           
        }
        else if (clientlist.getSelectedIndex()==4) {
            invisible();
             Client client1=new Client();
            Person client=client1.search(clients);
            if (client!=null) {    
                    try {
                        viewclientpanel=new View_client((Client)client,trips);
                         Add_to_display(viewclientpanel);
                    } catch (ParseException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
                    }
                } 
            }
    }//GEN-LAST:event_clientlistActionPerformed

    private void triplistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_triplistActionPerformed
        // TODO add your handling code here:
        tourguidelist.setEnabled(false);
        clientlist.setEnabled(false);
        profit.setEnabled(false);
        if (triplist.getSelectedIndex()==0) {
        invisible();
        tourguidelist.setEnabled(true);
        clientlist.setEnabled(true);
        profit.setEnabled(true);    
        }
        else if (triplist.getSelectedIndex()==1) {
            invisible();
            addtrippanel=new Add_Trip(trips, tour_guide);
            Add_to_display(addtrippanel);
            
        }
        else if(triplist.getSelectedIndex()==3){
            invisible();
            try {
                viewpanel = new View_trip(trips,clients,6);
            } catch (ParseException ex) {
                Logger.getLogger(Mainframe.class.getName()).log(Level.SEVERE, null, ex);
            }
             Add_to_display(viewpanel);
        }
        
        else if (triplist.getSelectedIndex()==2) {//delete
            invisible();
            try {
                viewpanel = new View_trip(trips,clients,7);
            } catch (ParseException ex) {
                Logger.getLogger(Mainframe.class.getName()).log(Level.SEVERE, null, ex);
            }
             Add_to_display(viewpanel);
        }
        
        else if (triplist.getSelectedIndex()==4) {
            invisible();    
            try {
                viewpanel=new View_trip(trips,clients,1);
            } catch (ParseException ex) {
                Logger.getLogger(Mainframe.class.getName()).log(Level.SEVERE, null, ex);
            }
            Add_to_display(viewpanel);
        }
        
         else if (triplist.getSelectedIndex()==5) {
             invisible();
            try {
                viewpanel=new View_trip(trips,clients,4);
            } catch (ParseException ex) {
                Logger.getLogger(Mainframe.class.getName()).log(Level.SEVERE, null, ex);
            }
              Add_to_display(viewpanel);
         }
         else if (triplist.getSelectedIndex()==6) {
            invisible();
             historypanel=new History(trips, history);
             Add_to_display(historypanel);
        }
    }//GEN-LAST:event_triplistActionPerformed

    private void tourguidelistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tourguidelistActionPerformed
        // TODO add your handling code here:
        triplist.setEnabled(false);
        clientlist.setEnabled(false);
        profit.setEnabled(false);
        if (tourguidelist.getSelectedIndex()==0) {
        invisible();  
        triplist.setEnabled(true);
        clientlist.setEnabled(true);
        profit.setEnabled(true);
        }
        else if (tourguidelist.getSelectedIndex()==1) {
        invisible();
        addtourpanel.setVisible(true);
        }
        else if(tourguidelist.getSelectedIndex()==2){
            invisible();
            Tour_Guide tour_guide1=new Tour_Guide();
            Person tg=tour_guide1.search(tour_guide);
            if (tg!=null) {    
            int choice=JOptionPane.showConfirmDialog(null,"Are You Sure You Want To Delete This Tour Guide ?");
                    if (choice==0) {
                        JOptionPane.showMessageDialog(null, "Client is Removed Successfully");
                        tour_guide.remove((Tour_Guide)tg);
                    }
            }
        }
        else if (tourguidelist.getSelectedIndex()==3) {
            invisible();
            Tour_Guide tour_guide1=new Tour_Guide();
            Person tg=tour_guide1.search(tour_guide);
            if (tg!=null) {    
                edittourpanel=new Edit_Tour_Guide((Tour_Guide)tg);
                Add_to_display(edittourpanel);
            }
        }
        else if (tourguidelist.getSelectedIndex()==4) {
            invisible();
            viewtourpanel=new View_TourGuide(tour_guide);
             Add_to_display(viewtourpanel);
        }
    }//GEN-LAST:event_tourguidelistActionPerformed

    private void profitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profitActionPerformed
        // TODO add your handling code here:
       tourguidelist.setEnabled(false);
       clientlist.setEnabled(false);
       triplist.setEnabled(false);
        if (profit.getSelectedIndex()==0) {
        invisible();
        tourguidelist.setEnabled(true);
        clientlist.setEnabled(true);
        triplist.setEnabled(true);  
        }
       else if(profit.getSelectedIndex()==1){
                invisible();     
              try {
                  viewpanel=new View_trip(trips,clients,0);
              } catch (ParseException ex) {
                  Logger.getLogger(Mainframe.class.getName()).log(Level.SEVERE, null, ex);
              }
                Add_to_display(viewpanel);
        }
        
        else if(profit.getSelectedIndex()==2){
            invisible();
             double safari_profit=0;
             double   adventure_profit=0;
             double  culture_profit=0,religios_profit=0;   
       for(Trip triplist3:trips)
       { 
          String x= triplist3.getCategory();
           if ("Safari".equals(x))
           {
               safari_profit+=triplist3.getPrice()*triplist3.getNumber_of_joined();
           }           
           if ("Adventure".equals(x))
           {
               adventure_profit+=triplist3.getPrice()*triplist3.getNumber_of_joined();
           }         
           if ("Culture".equals(x))
           {
               culture_profit+=triplist3.getPrice()*triplist3.getNumber_of_joined();
           }         
           if ("Religious".equals(x))
           {
               religios_profit+=triplist3.getPrice()*triplist3.getNumber_of_joined();
           }    
       }
           GridBagConstraints c=new GridBagConstraints();
           c.gridx=c.gridy=0;
           profitpanel=new PROFIT(1, safari_profit);
           displaypanel.add(profitpanel,c);
           c.gridy+=10;
           profitpanel.setVisible(true);
           displaypanel.repaint();
           displaypanel.validate();
           profitpanel2=new PROFIT(2, adventure_profit);
           displaypanel.add(profitpanel2,c);
           c.gridy+=10;
           profitpanel2.setVisible(true);
           displaypanel.repaint();
           displaypanel.validate();
           profitpanel3=new PROFIT(3, culture_profit);
           displaypanel.add(profitpanel3,c);
           c.gridy+=10;
           profitpanel3.setVisible(true);
           displaypanel.repaint();
           displaypanel.validate();
           profitpanel4=new PROFIT(4, religios_profit);
           displaypanel.add(profitpanel4,c);
           profitpanel4.setVisible(true);
           displaypanel.repaint();
           displaypanel.validate();
        }
        
        else if(profit.getSelectedIndex()==3){
       invisible();
       double y=0;   
       for(Trip triplist3:trips){
       y+=triplist3.getPrice()*triplist3.getNumber_of_joined();
       }
           profitpanel=new PROFIT(5,y);
           Add_to_display(profitpanel); 
        }
    }//GEN-LAST:event_profitActionPerformed

    
    private void invisible(){
        addpanel.setVisible(false);
        addtrippanel.setVisible(false);
        addtourpanel.setVisible(false);
        viewpanel.setVisible(false);
        viewclientpanel.setVisible(false);
        editclientpanel.setVisible(false);
        addtourpanel.setVisible(false);
        edittourpanel.setVisible(false);
        profitpanel.setVisible(false);
        profitpanel2.setVisible(false);
        profitpanel3.setVisible(false);
        profitpanel4.setVisible(false);
        viewtourpanel.setVisible(false);
        historypanel.setVisible(false);
    }
    
    private void Add_to_display(JPanel panel){
                 GridBagConstraints c=new GridBagConstraints();
                 c.gridx=0;
                 c.gridy=0;
                 displaypanel.add(panel,c);
                 panel.setVisible(true);
                 displaypanel.repaint();
                 displaypanel.validate();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new Mainframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox clientlist;
    private javax.swing.JPanel displaypanel;
    private javax.swing.JPanel options;
    private javax.swing.JComboBox profit;
    private javax.swing.JDesktopPane templet;
    private javax.swing.JComboBox tourguidelist;
    private javax.swing.JComboBox triplist;
    // End of variables declaration//GEN-END:variables

}
